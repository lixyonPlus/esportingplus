server:
  port: 9001
  # {@link https://github.com/undertow-io/undertow/blob/master/core/src/main/java/io/undertow/Undertow.java}
  undertow:
    # Size of each buffer in bytes.
    buffer-size: 1024
    # Allocate buffers outside the Java heap. The default is derived from the maximum amount of memory that is available to the JVM.
    direct-buffers: true
    # Number of I/O threads to create for the worker. The default is derived from the number of available processors.
    io-threads: 16
    # Number of worker threads. The default is 8 times the number of I/O threads.
    worker-threads: 256

spring:
  application:
    name: esportingplus-user-service
  profiles:
    active: @profile.env@
  cloud:
    config:
      #uri: http://localhost:8888
      fail-fast: true
      profile: @profile.env@
      label: @profile.env@
      username: ${security.user.name}
      password: ${security.user.password}
      retry:
        initial-interval: 2000
        max-interval: 10000
        multiplier: 2
        max-attempts: 10
      discovery:
        #从配置中心读取配置
        enabled: true
        serviceId: config-server
  jackson:
      time-zone: GMT+8 # 解决 jackson 转换的时候出现的时区问题
      date-format: yyyy-MM-dd HH:mm:ss # 日期格式化时使用 2018-01-01 23:59:01 的格式
      property-naming-strategy: SNAKE_CASE # 使用下划线方式格式化字段
      #default-property-inclusion: NON_NULL # 忽略 null值

management:
  security:
    enabled: false

security:
  user:
    name: admin
    password: ${USER_SERVICE_PASSWORD:admin}

# 分布式ID配置
snowflake:
  #数据中心，按服务模块编号，0: 用户 1: 车 2: 订单 3: 资源 10:支付（具体未定）
  dataCenter: 0

#dubbo:
#  application:
#    name: esportingplus-user-consume
#    owner: user
#  registry:
#    address: zookeeper://120.77.146.135:2181
#    register: true
#    subscribe: true
#    group: @profile.env@/dubbo
#    check: false

---
spring:
  profiles: dev

eureka:
  instance:
    #hostname: 127.0.0.1
    prefer-ip-address: true
    metadata-map:
      user.name: ${security.user.name}
      user.password: ${security.user.password}
  client:
    service-url:
      defaultZone: http://${security.user.name}:${security.user.password}@localhost:8761/eureka/

---
spring:
  profiles: test

eureka:
  instance:
    #hostname: 127.0.0.1
    prefer-ip-address: true
    metadata-map:
      user.name: ${security.user.name}
      user.password: ${security.user.password}
  client:
    service-url:
      defaultZone: ${eureka.client.service-url.defaultZone}

---
spring:
  profiles: test2

eureka:
  instance:
    #hostname: 127.0.0.1
    prefer-ip-address: true
    metadata-map:
      user.name: ${security.user.name}
      user.password: ${security.user.password}
  client:
    service-url:
      defaultZone: ${eureka.client.service-url.defaultZone}

---
spring:
  profiles: test3

eureka:
  instance:
    #hostname: 127.0.0.1
    prefer-ip-address: true
    metadata-map:
      user.name: ${security.user.name}
      user.password: ${security.user.password}
  client:
    service-url:
      defaultZone: ${eureka.client.service-url.defaultZone}

---
spring:
  profiles: grey

eureka:
  instance:
    #hostname: 127.0.0.1
    prefer-ip-address: true
    metadata-map:
      user.name: ${security.user.name}
      user.password: ${security.user.password}
  client:
    service-url:
      defaultZone: ${eureka.client.service-url.defaultZone}

---
spring:
  profiles: load

eureka:
  instance:
    #hostname: 127.0.0.1
    prefer-ip-address: true
    metadata-map:
      user.name: ${security.user.name}
      user.password: ${security.user.password}
  client:
    service-url:
      defaultZone: ${eureka.client.service-url.defaultZone}

---
spring:
  profiles: grey2

eureka:
  instance:
    #hostname: 127.0.0.1
    prefer-ip-address: true
    metadata-map:
      user.name: ${security.user.name}
      user.password: ${security.user.password}
  client:
    service-url:
      defaultZone: ${eureka.client.service-url.defaultZone}

---
spring:
  profiles: grey3

eureka:
  instance:
    #hostname: 127.0.0.1
    prefer-ip-address: true
    metadata-map:
      user.name: ${security.user.name}
      user.password: ${security.user.password}
  client:
    service-url:
      defaultZone: ${eureka.client.service-url.defaultZone}

---
spring:
  profiles: prod

eureka:
  instance:
    #hostname: 127.0.0.1
    prefer-ip-address: true
    metadata-map:
      user.name: ${security.user.name}
      user.password: ${security.user.password}
  client:
    service-url:
      defaultZone: ${eureka.client.service-url.defaultZone}

---
spring:
  profiles: prod2

eureka:
  instance:
    #hostname: 127.0.0.1
    prefer-ip-address: true
    metadata-map:
      user.name: ${security.user.name}
      user.password: ${security.user.password}
  client:
    service-url:
      defaultZone: ${eureka.client.service-url.defaultZone}